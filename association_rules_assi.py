# -*- coding: utf-8 -*-
"""association rules assi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IErrisWx0tt7F_2T77fkx3EqTT4KD-tr
"""

#ASSOCIATION RULES WITH 10% SUPPORT AND 70% CONFIDENCE

import pandas as pd
from mlxtend.frequent_patterns import apriori,association_rules
from mlxtend.preprocessing import TransactionEncoder

book=pd.read_csv("book.csv")
book.head()

frequent_itemsets = apriori(book, min_support=0.1, use_colnames=True)
frequent_itemsets

rules = association_rules(frequent_itemsets, metric="lift", min_threshold=0.7)
rules

rules.sort_values('lift',ascending = False).head(10)

rules[rules.lift>1]

import matplotlib.pyplot as plt
plt.scatter(rules['support'],rules['confidence'])
plt.xlabel('support')
plt.ylabel('confidence') 
plt.show()

#ASSOCIATION RULES WITH 5% SUPPORT AND 80% CONFIDENCE

frequent_itemsets1 = apriori(book, min_support=0.05, use_colnames=True)
frequent_itemsets1

rules1=association_rules(frequent_itemsets1,metric='lift',min_threshold=0.8)
rules1

rules1[rules1.lift>1]

plt.scatter(rules1['support'],rules1['confidence'])
plt.xlabel('support')
plt.ylabel('confidence') 
plt.show()

"""# movie question

"""

#ASSOCIATION RULES WITH 20% SUPPORT AND 70% CONFIDENCE

import pandas as pd
from mlxtend.frequent_patterns import apriori,association_rules
from mlxtend.preprocessing import TransactionEncoder

movies=pd.read_csv("my_movies.csv")
movies.head()

df=pd.get_dummies(movies)
df.head()

frequent_itemsets = apriori(df, min_support=0.2, use_colnames=True)
frequent_itemsets

rules = association_rules(frequent_itemsets, metric="lift", min_threshold=0.7)
rules

rules.sort_values('lift',ascending = False).head(10)

rules[rules.lift>1]

import matplotlib.pyplot as plt
plt.scatter(rules['support'],rules['confidence'])
plt.xlabel('support')
plt.ylabel('confidence') 
plt.show()

#ASSOCIATION RULES WITH 15% SUPPORT AND 90% CONFIDENCE

frequent_itemsets1 = apriori(df, min_support=0.15, use_colnames=True)
frequent_itemsets1

rules1=association_rules(frequent_itemsets1,metric='lift',min_threshold=0.9)
rules1

rules1.sort_values('lift',ascending = False).head(10)

rules1[rules1.lift>1]

plt.scatter(rules1['support'],rules1['confidence'])
plt.xlabel('support')
plt.ylabel('confidence') 
plt.show()

