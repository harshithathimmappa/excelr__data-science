{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled15.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNFs+Xqdp8Mtw4SPBIRQ7uh",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/harshithathimmappa/excelr__data-science/blob/main/association%20rules%20ass\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "j0nDJonKlZ2Z"
      },
      "outputs": [],
      "source": [
        "#ASSOCIATION RULES WITH 10% SUPPORT AND 70% CONFIDENCE"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from mlxtend.frequent_patterns import apriori,association_rules\n",
        "from mlxtend.preprocessing import TransactionEncoder"
      ],
      "metadata": {
        "id": "4leeMtfdldxE"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "book=pd.read_csv(\"book.csv\")\n",
        "book.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "gkGu2ea1lh5V",
        "outputId": "3fc36829-0c58-4db6-a6d4-9ae10153277a"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ChildBks  YouthBks  CookBks  DoItYBks  RefBks  ArtBks  GeogBks  ItalCook  \\\n",
              "0         0         1        0         1       0       0        1         0   \n",
              "1         1         0        0         0       0       0        0         0   \n",
              "2         0         0        0         0       0       0        0         0   \n",
              "3         1         1        1         0       1       0        1         0   \n",
              "4         0         0        1         0       0       0        1         0   \n",
              "\n",
              "   ItalAtlas  ItalArt  Florence  \n",
              "0          0        0         0  \n",
              "1          0        0         0  \n",
              "2          0        0         0  \n",
              "3          0        0         0  \n",
              "4          0        0         0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4401f094-ac21-45e3-83ee-c4997ba5512a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ChildBks</th>\n",
              "      <th>YouthBks</th>\n",
              "      <th>CookBks</th>\n",
              "      <th>DoItYBks</th>\n",
              "      <th>RefBks</th>\n",
              "      <th>ArtBks</th>\n",
              "      <th>GeogBks</th>\n",
              "      <th>ItalCook</th>\n",
              "      <th>ItalAtlas</th>\n",
              "      <th>ItalArt</th>\n",
              "      <th>Florence</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4401f094-ac21-45e3-83ee-c4997ba5512a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4401f094-ac21-45e3-83ee-c4997ba5512a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4401f094-ac21-45e3-83ee-c4997ba5512a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "frequent_itemsets = apriori(book, min_support=0.1, use_colnames=True)\n",
        "frequent_itemsets"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "0twoonfklldM",
        "outputId": "c83b8059-6614-43ef-a4b7-189fa5cbd513"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    support                       itemsets\n",
              "0    0.4230                     (ChildBks)\n",
              "1    0.2475                     (YouthBks)\n",
              "2    0.4310                      (CookBks)\n",
              "3    0.2820                     (DoItYBks)\n",
              "4    0.2145                       (RefBks)\n",
              "5    0.2410                       (ArtBks)\n",
              "6    0.2760                      (GeogBks)\n",
              "7    0.1135                     (ItalCook)\n",
              "8    0.1085                     (Florence)\n",
              "9    0.1650           (YouthBks, ChildBks)\n",
              "10   0.2560            (CookBks, ChildBks)\n",
              "11   0.1840           (DoItYBks, ChildBks)\n",
              "12   0.1515             (RefBks, ChildBks)\n",
              "13   0.1625             (ArtBks, ChildBks)\n",
              "14   0.1950            (GeogBks, ChildBks)\n",
              "15   0.1620            (YouthBks, CookBks)\n",
              "16   0.1155           (DoItYBks, YouthBks)\n",
              "17   0.1010             (ArtBks, YouthBks)\n",
              "18   0.1205            (YouthBks, GeogBks)\n",
              "19   0.1875            (DoItYBks, CookBks)\n",
              "20   0.1525              (RefBks, CookBks)\n",
              "21   0.1670              (ArtBks, CookBks)\n",
              "22   0.1925             (GeogBks, CookBks)\n",
              "23   0.1135            (CookBks, ItalCook)\n",
              "24   0.1055             (DoItYBks, RefBks)\n",
              "25   0.1235             (DoItYBks, ArtBks)\n",
              "26   0.1325            (DoItYBks, GeogBks)\n",
              "27   0.1105              (GeogBks, RefBks)\n",
              "28   0.1275              (ArtBks, GeogBks)\n",
              "29   0.1290  (YouthBks, CookBks, ChildBks)\n",
              "30   0.1460  (DoItYBks, CookBks, ChildBks)\n",
              "31   0.1225    (RefBks, CookBks, ChildBks)\n",
              "32   0.1265    (ArtBks, CookBks, ChildBks)\n",
              "33   0.1495   (GeogBks, CookBks, ChildBks)\n",
              "34   0.1045  (DoItYBks, GeogBks, ChildBks)\n",
              "35   0.1020    (ArtBks, GeogBks, ChildBks)\n",
              "36   0.1015    (DoItYBks, ArtBks, CookBks)\n",
              "37   0.1085   (DoItYBks, GeogBks, CookBks)\n",
              "38   0.1035     (ArtBks, GeogBks, CookBks)"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bc809fe7-353e-449f-bf6f-6fa32f4e6945\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>support</th>\n",
              "      <th>itemsets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.4230</td>\n",
              "      <td>(ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.2475</td>\n",
              "      <td>(YouthBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.4310</td>\n",
              "      <td>(CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.2820</td>\n",
              "      <td>(DoItYBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.2145</td>\n",
              "      <td>(RefBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.2410</td>\n",
              "      <td>(ArtBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.2760</td>\n",
              "      <td>(GeogBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.1135</td>\n",
              "      <td>(ItalCook)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.1085</td>\n",
              "      <td>(Florence)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.1650</td>\n",
              "      <td>(YouthBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0.2560</td>\n",
              "      <td>(CookBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0.1840</td>\n",
              "      <td>(DoItYBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0.1515</td>\n",
              "      <td>(RefBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0.1625</td>\n",
              "      <td>(ArtBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0.1950</td>\n",
              "      <td>(GeogBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0.1620</td>\n",
              "      <td>(YouthBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0.1155</td>\n",
              "      <td>(DoItYBks, YouthBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0.1010</td>\n",
              "      <td>(ArtBks, YouthBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.1205</td>\n",
              "      <td>(YouthBks, GeogBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0.1875</td>\n",
              "      <td>(DoItYBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0.1525</td>\n",
              "      <td>(RefBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0.1670</td>\n",
              "      <td>(ArtBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>0.1925</td>\n",
              "      <td>(GeogBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>0.1135</td>\n",
              "      <td>(CookBks, ItalCook)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>0.1055</td>\n",
              "      <td>(DoItYBks, RefBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>0.1235</td>\n",
              "      <td>(DoItYBks, ArtBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>0.1325</td>\n",
              "      <td>(DoItYBks, GeogBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>0.1105</td>\n",
              "      <td>(GeogBks, RefBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>0.1275</td>\n",
              "      <td>(ArtBks, GeogBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>0.1290</td>\n",
              "      <td>(YouthBks, CookBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>0.1460</td>\n",
              "      <td>(DoItYBks, CookBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>0.1225</td>\n",
              "      <td>(RefBks, CookBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>0.1265</td>\n",
              "      <td>(ArtBks, CookBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>0.1495</td>\n",
              "      <td>(GeogBks, CookBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>0.1045</td>\n",
              "      <td>(DoItYBks, GeogBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>0.1020</td>\n",
              "      <td>(ArtBks, GeogBks, ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>0.1015</td>\n",
              "      <td>(DoItYBks, ArtBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>0.1085</td>\n",
              "      <td>(DoItYBks, GeogBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>0.1035</td>\n",
              "      <td>(ArtBks, GeogBks, CookBks)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc809fe7-353e-449f-bf6f-6fa32f4e6945')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bc809fe7-353e-449f-bf6f-6fa32f4e6945 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bc809fe7-353e-449f-bf6f-6fa32f4e6945');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=0.7)\n",
        "rules"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "G5eRaDsel8-y",
        "outputId": "18ecc02d-0b30-418c-a397-e6a4dbb67b09"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           antecedents         consequents  antecedent support  \\\n",
              "0           (YouthBks)          (ChildBks)              0.2475   \n",
              "1           (ChildBks)          (YouthBks)              0.4230   \n",
              "2            (CookBks)          (ChildBks)              0.4310   \n",
              "3           (ChildBks)           (CookBks)              0.4230   \n",
              "4           (DoItYBks)          (ChildBks)              0.2820   \n",
              "..                 ...                 ...                 ...   \n",
              "95   (ArtBks, CookBks)           (GeogBks)              0.1670   \n",
              "96  (GeogBks, CookBks)            (ArtBks)              0.1925   \n",
              "97            (ArtBks)  (GeogBks, CookBks)              0.2410   \n",
              "98           (GeogBks)   (ArtBks, CookBks)              0.2760   \n",
              "99           (CookBks)   (ArtBks, GeogBks)              0.4310   \n",
              "\n",
              "    consequent support  support  confidence      lift  leverage  conviction  \n",
              "0               0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n",
              "1               0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n",
              "2               0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n",
              "3               0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n",
              "4               0.4230   0.1840    0.652482  1.542511  0.064714    1.660347  \n",
              "..                 ...      ...         ...       ...       ...         ...  \n",
              "95              0.2760   0.1035    0.619760  2.245509  0.057408    1.904063  \n",
              "96              0.2410   0.1035    0.537662  2.230964  0.057107    1.641657  \n",
              "97              0.1925   0.1035    0.429461  2.230964  0.057107    1.415327  \n",
              "98              0.1670   0.1035    0.375000  2.245509  0.057408    1.332800  \n",
              "99              0.1275   0.1035    0.240139  1.883445  0.048547    1.148237  \n",
              "\n",
              "[100 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ebd74d1b-a9c4-4b2e-b3fb-0f9bafd0489c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.731000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.390071</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.233750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.593968</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.421069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.605201</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.441240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(DoItYBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2820</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1840</td>\n",
              "      <td>0.652482</td>\n",
              "      <td>1.542511</td>\n",
              "      <td>0.064714</td>\n",
              "      <td>1.660347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>(ArtBks, CookBks)</td>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>0.1670</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.619760</td>\n",
              "      <td>2.245509</td>\n",
              "      <td>0.057408</td>\n",
              "      <td>1.904063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>(GeogBks, CookBks)</td>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>0.1925</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.537662</td>\n",
              "      <td>2.230964</td>\n",
              "      <td>0.057107</td>\n",
              "      <td>1.641657</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>(GeogBks, CookBks)</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1925</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.429461</td>\n",
              "      <td>2.230964</td>\n",
              "      <td>0.057107</td>\n",
              "      <td>1.415327</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>(ArtBks, CookBks)</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1670</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.375000</td>\n",
              "      <td>2.245509</td>\n",
              "      <td>0.057408</td>\n",
              "      <td>1.332800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(ArtBks, GeogBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.1275</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.240139</td>\n",
              "      <td>1.883445</td>\n",
              "      <td>0.048547</td>\n",
              "      <td>1.148237</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ebd74d1b-a9c4-4b2e-b3fb-0f9bafd0489c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ebd74d1b-a9c4-4b2e-b3fb-0f9bafd0489c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ebd74d1b-a9c4-4b2e-b3fb-0f9bafd0489c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules.sort_values('lift',ascending = False).head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "o2DPW0jWmAXg",
        "outputId": "89916e77-3a04-49c3-a90f-4c04fa05f15c"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            antecedents          consequents  antecedent support  \\\n",
              "28            (CookBks)           (ItalCook)              0.4310   \n",
              "29           (ItalCook)            (CookBks)              0.1135   \n",
              "77   (ArtBks, ChildBks)            (GeogBks)              0.1625   \n",
              "80            (GeogBks)   (ArtBks, ChildBks)              0.2760   \n",
              "86             (ArtBks)  (DoItYBks, CookBks)              0.2410   \n",
              "83  (DoItYBks, CookBks)             (ArtBks)              0.1875   \n",
              "98            (GeogBks)    (ArtBks, CookBks)              0.2760   \n",
              "95    (ArtBks, CookBks)            (GeogBks)              0.1670   \n",
              "97             (ArtBks)   (GeogBks, CookBks)              0.2410   \n",
              "96   (GeogBks, CookBks)             (ArtBks)              0.1925   \n",
              "\n",
              "    consequent support  support  confidence      lift  leverage  conviction  \n",
              "28              0.1135   0.1135    0.263341  2.320186  0.064582    1.203406  \n",
              "29              0.4310   0.1135    1.000000  2.320186  0.064582         inf  \n",
              "77              0.2760   0.1020    0.627692  2.274247  0.057150    1.944628  \n",
              "80              0.1625   0.1020    0.369565  2.274247  0.057150    1.328448  \n",
              "86              0.1875   0.1015    0.421162  2.246196  0.056313    1.403674  \n",
              "83              0.2410   0.1015    0.541333  2.246196  0.056313    1.654797  \n",
              "98              0.1670   0.1035    0.375000  2.245509  0.057408    1.332800  \n",
              "95              0.2760   0.1035    0.619760  2.245509  0.057408    1.904063  \n",
              "97              0.1925   0.1035    0.429461  2.230964  0.057107    1.415327  \n",
              "96              0.2410   0.1035    0.537662  2.230964  0.057107    1.641657  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4a6f35af-aa26-4a97-ab63-9dacfdf933d4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(ItalCook)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.1135</td>\n",
              "      <td>0.1135</td>\n",
              "      <td>0.263341</td>\n",
              "      <td>2.320186</td>\n",
              "      <td>0.064582</td>\n",
              "      <td>1.203406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>(ItalCook)</td>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>0.1135</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.1135</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.320186</td>\n",
              "      <td>0.064582</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>(ArtBks, ChildBks)</td>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1020</td>\n",
              "      <td>0.627692</td>\n",
              "      <td>2.274247</td>\n",
              "      <td>0.057150</td>\n",
              "      <td>1.944628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>(ArtBks, ChildBks)</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.1020</td>\n",
              "      <td>0.369565</td>\n",
              "      <td>2.274247</td>\n",
              "      <td>0.057150</td>\n",
              "      <td>1.328448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>(DoItYBks, CookBks)</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1875</td>\n",
              "      <td>0.1015</td>\n",
              "      <td>0.421162</td>\n",
              "      <td>2.246196</td>\n",
              "      <td>0.056313</td>\n",
              "      <td>1.403674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>(DoItYBks, CookBks)</td>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>0.1875</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1015</td>\n",
              "      <td>0.541333</td>\n",
              "      <td>2.246196</td>\n",
              "      <td>0.056313</td>\n",
              "      <td>1.654797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>(ArtBks, CookBks)</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1670</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.375000</td>\n",
              "      <td>2.245509</td>\n",
              "      <td>0.057408</td>\n",
              "      <td>1.332800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>(ArtBks, CookBks)</td>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>0.1670</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.619760</td>\n",
              "      <td>2.245509</td>\n",
              "      <td>0.057408</td>\n",
              "      <td>1.904063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>(GeogBks, CookBks)</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1925</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.429461</td>\n",
              "      <td>2.230964</td>\n",
              "      <td>0.057107</td>\n",
              "      <td>1.415327</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>(GeogBks, CookBks)</td>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>0.1925</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.537662</td>\n",
              "      <td>2.230964</td>\n",
              "      <td>0.057107</td>\n",
              "      <td>1.641657</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a6f35af-aa26-4a97-ab63-9dacfdf933d4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4a6f35af-aa26-4a97-ab63-9dacfdf933d4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4a6f35af-aa26-4a97-ab63-9dacfdf933d4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules[rules.lift>1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "TFx7KdE8mDv9",
        "outputId": "642f8b12-7639-4dfa-f2c7-cde1303e092d"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           antecedents         consequents  antecedent support  \\\n",
              "0           (YouthBks)          (ChildBks)              0.2475   \n",
              "1           (ChildBks)          (YouthBks)              0.4230   \n",
              "2            (CookBks)          (ChildBks)              0.4310   \n",
              "3           (ChildBks)           (CookBks)              0.4230   \n",
              "4           (DoItYBks)          (ChildBks)              0.2820   \n",
              "..                 ...                 ...                 ...   \n",
              "95   (ArtBks, CookBks)           (GeogBks)              0.1670   \n",
              "96  (GeogBks, CookBks)            (ArtBks)              0.1925   \n",
              "97            (ArtBks)  (GeogBks, CookBks)              0.2410   \n",
              "98           (GeogBks)   (ArtBks, CookBks)              0.2760   \n",
              "99           (CookBks)   (ArtBks, GeogBks)              0.4310   \n",
              "\n",
              "    consequent support  support  confidence      lift  leverage  conviction  \n",
              "0               0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n",
              "1               0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n",
              "2               0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n",
              "3               0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n",
              "4               0.4230   0.1840    0.652482  1.542511  0.064714    1.660347  \n",
              "..                 ...      ...         ...       ...       ...         ...  \n",
              "95              0.2760   0.1035    0.619760  2.245509  0.057408    1.904063  \n",
              "96              0.2410   0.1035    0.537662  2.230964  0.057107    1.641657  \n",
              "97              0.1925   0.1035    0.429461  2.230964  0.057107    1.415327  \n",
              "98              0.1670   0.1035    0.375000  2.245509  0.057408    1.332800  \n",
              "99              0.1275   0.1035    0.240139  1.883445  0.048547    1.148237  \n",
              "\n",
              "[100 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fe6cf69a-b8d6-466c-8d04-2f07236a15bd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.731000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.390071</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.233750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.593968</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.421069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.605201</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.441240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(DoItYBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2820</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1840</td>\n",
              "      <td>0.652482</td>\n",
              "      <td>1.542511</td>\n",
              "      <td>0.064714</td>\n",
              "      <td>1.660347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>(ArtBks, CookBks)</td>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>0.1670</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.619760</td>\n",
              "      <td>2.245509</td>\n",
              "      <td>0.057408</td>\n",
              "      <td>1.904063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>(GeogBks, CookBks)</td>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>0.1925</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.537662</td>\n",
              "      <td>2.230964</td>\n",
              "      <td>0.057107</td>\n",
              "      <td>1.641657</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>(GeogBks, CookBks)</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.1925</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.429461</td>\n",
              "      <td>2.230964</td>\n",
              "      <td>0.057107</td>\n",
              "      <td>1.415327</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>(ArtBks, CookBks)</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.1670</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.375000</td>\n",
              "      <td>2.245509</td>\n",
              "      <td>0.057408</td>\n",
              "      <td>1.332800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(ArtBks, GeogBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.1275</td>\n",
              "      <td>0.1035</td>\n",
              "      <td>0.240139</td>\n",
              "      <td>1.883445</td>\n",
              "      <td>0.048547</td>\n",
              "      <td>1.148237</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe6cf69a-b8d6-466c-8d04-2f07236a15bd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fe6cf69a-b8d6-466c-8d04-2f07236a15bd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fe6cf69a-b8d6-466c-8d04-2f07236a15bd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.scatter(rules['support'],rules['confidence'])\n",
        "plt.xlabel('support')\n",
        "plt.ylabel('confidence') \n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "L0UelIavmF7O",
        "outputId": "62a74e37-15a8-45c7-8e55-4cb8baabe05f"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#ASSOCIATION RULES WITH 5% SUPPORT AND 80% CONFIDENCE"
      ],
      "metadata": {
        "id": "npXBeF59mI1K"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "frequent_itemsets1 = apriori(book, min_support=0.05, use_colnames=True)\n",
        "frequent_itemsets1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "5s4ySRibmPRe",
        "outputId": "045188d0-ea5c-4095-9ec8-45f797af53a0"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    support                                          itemsets\n",
              "0    0.4230                                        (ChildBks)\n",
              "1    0.2475                                        (YouthBks)\n",
              "2    0.4310                                         (CookBks)\n",
              "3    0.2820                                        (DoItYBks)\n",
              "4    0.2145                                          (RefBks)\n",
              "..      ...                                               ...\n",
              "95   0.0600            (DoItYBks, YouthBks, CookBks, GeogBks)\n",
              "96   0.0560              (ArtBks, YouthBks, CookBks, GeogBks)\n",
              "97   0.0650              (DoItYBks, ArtBks, GeogBks, CookBks)\n",
              "98   0.0510  (GeogBks, YouthBks, CookBks, ChildBks, DoItYBks)\n",
              "99   0.0535    (GeogBks, CookBks, ChildBks, DoItYBks, ArtBks)\n",
              "\n",
              "[100 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8a3fedf0-599c-4710-a908-a525613cbb20\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>support</th>\n",
              "      <th>itemsets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.4230</td>\n",
              "      <td>(ChildBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.2475</td>\n",
              "      <td>(YouthBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.4310</td>\n",
              "      <td>(CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.2820</td>\n",
              "      <td>(DoItYBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.2145</td>\n",
              "      <td>(RefBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>0.0600</td>\n",
              "      <td>(DoItYBks, YouthBks, CookBks, GeogBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>0.0560</td>\n",
              "      <td>(ArtBks, YouthBks, CookBks, GeogBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>0.0650</td>\n",
              "      <td>(DoItYBks, ArtBks, GeogBks, CookBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>0.0510</td>\n",
              "      <td>(GeogBks, YouthBks, CookBks, ChildBks, DoItYBks)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>0.0535</td>\n",
              "      <td>(GeogBks, CookBks, ChildBks, DoItYBks, ArtBks)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a3fedf0-599c-4710-a908-a525613cbb20')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8a3fedf0-599c-4710-a908-a525613cbb20 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8a3fedf0-599c-4710-a908-a525613cbb20');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules1=association_rules(frequent_itemsets1,metric='lift',min_threshold=0.8)\n",
        "rules1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "3WHrqRAsmSKN",
        "outputId": "326b68f3-3eb0-47a7-eaa7-b2d1a2814778"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    antecedents                             consequents  antecedent support  \\\n",
              "0    (YouthBks)                              (ChildBks)              0.2475   \n",
              "1    (ChildBks)                              (YouthBks)              0.4230   \n",
              "2     (CookBks)                              (ChildBks)              0.4310   \n",
              "3    (ChildBks)                               (CookBks)              0.4230   \n",
              "4    (DoItYBks)                              (ChildBks)              0.2820   \n",
              "..          ...                                     ...                 ...   \n",
              "657   (GeogBks)   (DoItYBks, ArtBks, CookBks, ChildBks)              0.2760   \n",
              "658   (CookBks)   (DoItYBks, ArtBks, GeogBks, ChildBks)              0.4310   \n",
              "659  (ChildBks)    (DoItYBks, ArtBks, GeogBks, CookBks)              0.4230   \n",
              "660  (DoItYBks)    (ArtBks, GeogBks, CookBks, ChildBks)              0.2820   \n",
              "661    (ArtBks)  (DoItYBks, GeogBks, CookBks, ChildBks)              0.2410   \n",
              "\n",
              "     consequent support  support  confidence      lift  leverage  conviction  \n",
              "0                0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n",
              "1                0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n",
              "2                0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n",
              "3                0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n",
              "4                0.4230   0.1840    0.652482  1.542511  0.064714    1.660347  \n",
              "..                  ...      ...         ...       ...       ...         ...  \n",
              "657              0.0820   0.0535    0.193841  2.363910  0.030868    1.138733  \n",
              "658              0.0595   0.0535    0.124130  2.086217  0.027856    1.073789  \n",
              "659              0.0650   0.0535    0.126478  1.945808  0.026005    1.070379  \n",
              "660              0.0835   0.0535    0.189716  2.272052  0.029953    1.131085  \n",
              "661              0.0890   0.0535    0.221992  2.494289  0.032051    1.170939  \n",
              "\n",
              "[662 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f8111913-a59e-4063-802a-bad0592dde45\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.731000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.390071</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.233750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.593968</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.421069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.605201</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.441240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(DoItYBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2820</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1840</td>\n",
              "      <td>0.652482</td>\n",
              "      <td>1.542511</td>\n",
              "      <td>0.064714</td>\n",
              "      <td>1.660347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>657</th>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>(DoItYBks, ArtBks, CookBks, ChildBks)</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.0820</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.193841</td>\n",
              "      <td>2.363910</td>\n",
              "      <td>0.030868</td>\n",
              "      <td>1.138733</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>658</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(DoItYBks, ArtBks, GeogBks, ChildBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.0595</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.124130</td>\n",
              "      <td>2.086217</td>\n",
              "      <td>0.027856</td>\n",
              "      <td>1.073789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>659</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(DoItYBks, ArtBks, GeogBks, CookBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.0650</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.126478</td>\n",
              "      <td>1.945808</td>\n",
              "      <td>0.026005</td>\n",
              "      <td>1.070379</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>660</th>\n",
              "      <td>(DoItYBks)</td>\n",
              "      <td>(ArtBks, GeogBks, CookBks, ChildBks)</td>\n",
              "      <td>0.2820</td>\n",
              "      <td>0.0835</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.189716</td>\n",
              "      <td>2.272052</td>\n",
              "      <td>0.029953</td>\n",
              "      <td>1.131085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>661</th>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>(DoItYBks, GeogBks, CookBks, ChildBks)</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.0890</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.221992</td>\n",
              "      <td>2.494289</td>\n",
              "      <td>0.032051</td>\n",
              "      <td>1.170939</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>662 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8111913-a59e-4063-802a-bad0592dde45')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f8111913-a59e-4063-802a-bad0592dde45 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f8111913-a59e-4063-802a-bad0592dde45');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules1[rules1.lift>1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "0RHY_tIFmUfN",
        "outputId": "e3e1c825-2ae5-4ade-fd78-22c5388f18a7"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    antecedents                             consequents  antecedent support  \\\n",
              "0    (YouthBks)                              (ChildBks)              0.2475   \n",
              "1    (ChildBks)                              (YouthBks)              0.4230   \n",
              "2     (CookBks)                              (ChildBks)              0.4310   \n",
              "3    (ChildBks)                               (CookBks)              0.4230   \n",
              "4    (DoItYBks)                              (ChildBks)              0.2820   \n",
              "..          ...                                     ...                 ...   \n",
              "657   (GeogBks)   (DoItYBks, ArtBks, CookBks, ChildBks)              0.2760   \n",
              "658   (CookBks)   (DoItYBks, ArtBks, GeogBks, ChildBks)              0.4310   \n",
              "659  (ChildBks)    (DoItYBks, ArtBks, GeogBks, CookBks)              0.4230   \n",
              "660  (DoItYBks)    (ArtBks, GeogBks, CookBks, ChildBks)              0.2820   \n",
              "661    (ArtBks)  (DoItYBks, GeogBks, CookBks, ChildBks)              0.2410   \n",
              "\n",
              "     consequent support  support  confidence      lift  leverage  conviction  \n",
              "0                0.4230   0.1650    0.666667  1.576044  0.060308    1.731000  \n",
              "1                0.2475   0.1650    0.390071  1.576044  0.060308    1.233750  \n",
              "2                0.4230   0.2560    0.593968  1.404179  0.073687    1.421069  \n",
              "3                0.4310   0.2560    0.605201  1.404179  0.073687    1.441240  \n",
              "4                0.4230   0.1840    0.652482  1.542511  0.064714    1.660347  \n",
              "..                  ...      ...         ...       ...       ...         ...  \n",
              "657              0.0820   0.0535    0.193841  2.363910  0.030868    1.138733  \n",
              "658              0.0595   0.0535    0.124130  2.086217  0.027856    1.073789  \n",
              "659              0.0650   0.0535    0.126478  1.945808  0.026005    1.070379  \n",
              "660              0.0835   0.0535    0.189716  2.272052  0.029953    1.131085  \n",
              "661              0.0890   0.0535    0.221992  2.494289  0.032051    1.170939  \n",
              "\n",
              "[662 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-44dd545e-b328-49b8-a441-55a75e925218\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.731000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(YouthBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2475</td>\n",
              "      <td>0.1650</td>\n",
              "      <td>0.390071</td>\n",
              "      <td>1.576044</td>\n",
              "      <td>0.060308</td>\n",
              "      <td>1.233750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.593968</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.421069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.2560</td>\n",
              "      <td>0.605201</td>\n",
              "      <td>1.404179</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>1.441240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(DoItYBks)</td>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>0.2820</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.1840</td>\n",
              "      <td>0.652482</td>\n",
              "      <td>1.542511</td>\n",
              "      <td>0.064714</td>\n",
              "      <td>1.660347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>657</th>\n",
              "      <td>(GeogBks)</td>\n",
              "      <td>(DoItYBks, ArtBks, CookBks, ChildBks)</td>\n",
              "      <td>0.2760</td>\n",
              "      <td>0.0820</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.193841</td>\n",
              "      <td>2.363910</td>\n",
              "      <td>0.030868</td>\n",
              "      <td>1.138733</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>658</th>\n",
              "      <td>(CookBks)</td>\n",
              "      <td>(DoItYBks, ArtBks, GeogBks, ChildBks)</td>\n",
              "      <td>0.4310</td>\n",
              "      <td>0.0595</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.124130</td>\n",
              "      <td>2.086217</td>\n",
              "      <td>0.027856</td>\n",
              "      <td>1.073789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>659</th>\n",
              "      <td>(ChildBks)</td>\n",
              "      <td>(DoItYBks, ArtBks, GeogBks, CookBks)</td>\n",
              "      <td>0.4230</td>\n",
              "      <td>0.0650</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.126478</td>\n",
              "      <td>1.945808</td>\n",
              "      <td>0.026005</td>\n",
              "      <td>1.070379</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>660</th>\n",
              "      <td>(DoItYBks)</td>\n",
              "      <td>(ArtBks, GeogBks, CookBks, ChildBks)</td>\n",
              "      <td>0.2820</td>\n",
              "      <td>0.0835</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.189716</td>\n",
              "      <td>2.272052</td>\n",
              "      <td>0.029953</td>\n",
              "      <td>1.131085</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>661</th>\n",
              "      <td>(ArtBks)</td>\n",
              "      <td>(DoItYBks, GeogBks, CookBks, ChildBks)</td>\n",
              "      <td>0.2410</td>\n",
              "      <td>0.0890</td>\n",
              "      <td>0.0535</td>\n",
              "      <td>0.221992</td>\n",
              "      <td>2.494289</td>\n",
              "      <td>0.032051</td>\n",
              "      <td>1.170939</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>662 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44dd545e-b328-49b8-a441-55a75e925218')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-44dd545e-b328-49b8-a441-55a75e925218 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-44dd545e-b328-49b8-a441-55a75e925218');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(rules1['support'],rules1['confidence'])\n",
        "plt.xlabel('support')\n",
        "plt.ylabel('confidence') \n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "kzT_NLt9mW4n",
        "outputId": "e165c690-b808-4e53-cb1d-45ee755a1918"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# movie question\n"
      ],
      "metadata": {
        "id": "d6a0lmuymnUh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#ASSOCIATION RULES WITH 20% SUPPORT AND 70% CONFIDENCE"
      ],
      "metadata": {
        "id": "-2S0C1i5m0FF"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from mlxtend.frequent_patterns import apriori,association_rules\n",
        "from mlxtend.preprocessing import TransactionEncoder"
      ],
      "metadata": {
        "id": "df50mPDQnF5J"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "movies=pd.read_csv(\"my_movies.csv\")\n",
        "movies.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "KE9rL0kjnIoY",
        "outputId": "f4597550-b40f-40f6-ae9c-6e45e97ffd03"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            V1       V2             V3          V4     V5  Sixth Sense  \\\n",
              "0  Sixth Sense    LOTR1  Harry Potter1  Green Mile  LOTR2            1   \n",
              "1    Gladiator  Patriot     Braveheart         NaN    NaN            0   \n",
              "2        LOTR1    LOTR2            NaN         NaN    NaN            0   \n",
              "3    Gladiator  Patriot    Sixth Sense         NaN    NaN            1   \n",
              "4    Gladiator  Patriot    Sixth Sense         NaN    NaN            1   \n",
              "\n",
              "   Gladiator  LOTR1  Harry Potter1  Patriot  LOTR2  Harry Potter2  LOTR  \\\n",
              "0          0      1              1        0      1              0     0   \n",
              "1          1      0              0        1      0              0     0   \n",
              "2          0      1              0        0      1              0     0   \n",
              "3          1      0              0        1      0              0     0   \n",
              "4          1      0              0        1      0              0     0   \n",
              "\n",
              "   Braveheart  Green Mile  \n",
              "0           0           1  \n",
              "1           1           0  \n",
              "2           0           0  \n",
              "3           0           0  \n",
              "4           0           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a084e51c-ae76-46a6-a7f3-240175475ab9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>V1</th>\n",
              "      <th>V2</th>\n",
              "      <th>V3</th>\n",
              "      <th>V4</th>\n",
              "      <th>V5</th>\n",
              "      <th>Sixth Sense</th>\n",
              "      <th>Gladiator</th>\n",
              "      <th>LOTR1</th>\n",
              "      <th>Harry Potter1</th>\n",
              "      <th>Patriot</th>\n",
              "      <th>LOTR2</th>\n",
              "      <th>Harry Potter2</th>\n",
              "      <th>LOTR</th>\n",
              "      <th>Braveheart</th>\n",
              "      <th>Green Mile</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Sixth Sense</td>\n",
              "      <td>LOTR1</td>\n",
              "      <td>Harry Potter1</td>\n",
              "      <td>Green Mile</td>\n",
              "      <td>LOTR2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Gladiator</td>\n",
              "      <td>Patriot</td>\n",
              "      <td>Braveheart</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>LOTR1</td>\n",
              "      <td>LOTR2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Gladiator</td>\n",
              "      <td>Patriot</td>\n",
              "      <td>Sixth Sense</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Gladiator</td>\n",
              "      <td>Patriot</td>\n",
              "      <td>Sixth Sense</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a084e51c-ae76-46a6-a7f3-240175475ab9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a084e51c-ae76-46a6-a7f3-240175475ab9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a084e51c-ae76-46a6-a7f3-240175475ab9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.get_dummies(movies)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "id": "Mvq7fM5jnKtX",
        "outputId": "6ea25ad9-bd98-423b-d85a-03c98bba9b8b"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Sixth Sense  Gladiator  LOTR1  Harry Potter1  Patriot  LOTR2  \\\n",
              "0            1          0      1              1        0      1   \n",
              "1            0          1      0              0        1      0   \n",
              "2            0          0      1              0        0      1   \n",
              "3            1          1      0              0        1      0   \n",
              "4            1          1      0              0        1      0   \n",
              "\n",
              "   Harry Potter2  LOTR  Braveheart  Green Mile  ...  V2_LOTR  V2_LOTR1  \\\n",
              "0              0     0           0           1  ...        0         1   \n",
              "1              0     0           1           0  ...        0         0   \n",
              "2              0     0           0           0  ...        0         0   \n",
              "3              0     0           0           0  ...        0         0   \n",
              "4              0     0           0           0  ...        0         0   \n",
              "\n",
              "   V2_LOTR2  V2_Patriot  V3_Braveheart  V3_Gladiator  V3_Harry Potter1  \\\n",
              "0         0           0              0             0                 1   \n",
              "1         0           1              1             0                 0   \n",
              "2         1           0              0             0                 0   \n",
              "3         0           1              0             0                 0   \n",
              "4         0           1              0             0                 0   \n",
              "\n",
              "   V3_Sixth Sense  V4_Green Mile  V5_LOTR2  \n",
              "0               0              1         1  \n",
              "1               0              0         0  \n",
              "2               0              0         0  \n",
              "3               1              0         0  \n",
              "4               1              0         0  \n",
              "\n",
              "[5 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6ca18132-7f76-42c8-b514-9ad479bde8c3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sixth Sense</th>\n",
              "      <th>Gladiator</th>\n",
              "      <th>LOTR1</th>\n",
              "      <th>Harry Potter1</th>\n",
              "      <th>Patriot</th>\n",
              "      <th>LOTR2</th>\n",
              "      <th>Harry Potter2</th>\n",
              "      <th>LOTR</th>\n",
              "      <th>Braveheart</th>\n",
              "      <th>Green Mile</th>\n",
              "      <th>...</th>\n",
              "      <th>V2_LOTR</th>\n",
              "      <th>V2_LOTR1</th>\n",
              "      <th>V2_LOTR2</th>\n",
              "      <th>V2_Patriot</th>\n",
              "      <th>V3_Braveheart</th>\n",
              "      <th>V3_Gladiator</th>\n",
              "      <th>V3_Harry Potter1</th>\n",
              "      <th>V3_Sixth Sense</th>\n",
              "      <th>V4_Green Mile</th>\n",
              "      <th>V5_LOTR2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 25 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ca18132-7f76-42c8-b514-9ad479bde8c3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6ca18132-7f76-42c8-b514-9ad479bde8c3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6ca18132-7f76-42c8-b514-9ad479bde8c3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "frequent_itemsets = apriori(df, min_support=0.2, use_colnames=True)\n",
        "frequent_itemsets"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "SxmfXU7tnMqI",
        "outputId": "e6757ba7-6a6e-4df0-ccc2-5fb52abe6c9b"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    support                                           itemsets\n",
              "0       0.6                                      (Sixth Sense)\n",
              "1       0.7                                        (Gladiator)\n",
              "2       0.2                                            (LOTR1)\n",
              "3       0.2                                    (Harry Potter1)\n",
              "4       0.6                                          (Patriot)\n",
              "..      ...                                                ...\n",
              "76      0.4  (V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...\n",
              "77      0.4  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...\n",
              "78      0.4  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...\n",
              "79      0.4  (V3_Sixth Sense, V1_Gladiator, Gladiator, V2_P...\n",
              "80      0.4  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...\n",
              "\n",
              "[81 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b091c21-e3e2-4561-85ee-247f0070bda9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>support</th>\n",
              "      <th>itemsets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.6</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.7</td>\n",
              "      <td>(Gladiator)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.2</td>\n",
              "      <td>(LOTR1)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.2</td>\n",
              "      <td>(Harry Potter1)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.6</td>\n",
              "      <td>(Patriot)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>79</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, Gladiator, V2_P...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>81 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b091c21-e3e2-4561-85ee-247f0070bda9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0b091c21-e3e2-4561-85ee-247f0070bda9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0b091c21-e3e2-4561-85ee-247f0070bda9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=0.7)\n",
        "rules"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "3BWNyYJInOvW",
        "outputId": "a58ae82f-8bc0-4540-f641-ee38d7311615"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        antecedents                                        consequents  \\\n",
              "0     (Sixth Sense)                                        (Gladiator)   \n",
              "1       (Gladiator)                                      (Sixth Sense)   \n",
              "2     (Sixth Sense)                                          (Patriot)   \n",
              "3         (Patriot)                                      (Sixth Sense)   \n",
              "4     (Sixth Sense)                                       (Green Mile)   \n",
              "..              ...                                                ...   \n",
              "649  (V1_Gladiator)  (V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...   \n",
              "650    (V2_Patriot)  (V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...   \n",
              "651     (Gladiator)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...   \n",
              "652   (Sixth Sense)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "653       (Patriot)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "\n",
              "     antecedent support  consequent support  support  confidence      lift  \\\n",
              "0                   0.6                 0.7      0.5    0.833333  1.190476   \n",
              "1                   0.7                 0.6      0.5    0.714286  1.190476   \n",
              "2                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "3                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "4                   0.6                 0.2      0.2    0.333333  1.666667   \n",
              "..                  ...                 ...      ...         ...       ...   \n",
              "649                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "650                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "651                 0.7                 0.4      0.4    0.571429  1.428571   \n",
              "652                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "653                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "\n",
              "     leverage  conviction  \n",
              "0        0.08         1.8  \n",
              "1        0.08         1.4  \n",
              "2        0.04         1.2  \n",
              "3        0.04         1.2  \n",
              "4        0.08         1.2  \n",
              "..        ...         ...  \n",
              "649      0.16         1.8  \n",
              "650      0.16         1.8  \n",
              "651      0.12         1.4  \n",
              "652      0.16         1.8  \n",
              "653      0.16         1.8  \n",
              "\n",
              "[654 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-53f8753f-6946-4ebd-a5a5-62890c9fda39\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.833333</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>649</th>\n",
              "      <td>(V1_Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>650</th>\n",
              "      <td>(V2_Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>651</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>1.428571</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>652</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>653</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>654 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53f8753f-6946-4ebd-a5a5-62890c9fda39')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-53f8753f-6946-4ebd-a5a5-62890c9fda39 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-53f8753f-6946-4ebd-a5a5-62890c9fda39');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules.sort_values('lift',ascending = False).head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "Qj199CninQ-Z",
        "outputId": "afa382c1-83cd-4170-910d-2046a91fa995"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         antecedents  \\\n",
              "327                     (Green Mile)   \n",
              "176  (V4_Green Mile, V1_Sixth Sense)   \n",
              "40                   (V4_Green Mile)   \n",
              "41                  (V1_Sixth Sense)   \n",
              "86     (Sixth Sense, V1_Sixth Sense)   \n",
              "87         (Sixth Sense, Green Mile)   \n",
              "90                  (V1_Sixth Sense)   \n",
              "91                      (Green Mile)   \n",
              "92      (Sixth Sense, V4_Green Mile)   \n",
              "93         (Sixth Sense, Green Mile)   \n",
              "\n",
              "                                      consequents  antecedent support  \\\n",
              "327  (Sixth Sense, V4_Green Mile, V1_Sixth Sense)                 0.2   \n",
              "176                                  (Green Mile)                 0.2   \n",
              "40                               (V1_Sixth Sense)                 0.2   \n",
              "41                                (V4_Green Mile)                 0.2   \n",
              "86                                   (Green Mile)                 0.2   \n",
              "87                               (V1_Sixth Sense)                 0.2   \n",
              "90                      (Sixth Sense, Green Mile)                 0.2   \n",
              "91                  (Sixth Sense, V1_Sixth Sense)                 0.2   \n",
              "92                                   (Green Mile)                 0.2   \n",
              "93                                (V4_Green Mile)                 0.2   \n",
              "\n",
              "     consequent support  support  confidence  lift  leverage  conviction  \n",
              "327                 0.2      0.2         1.0   5.0      0.16         inf  \n",
              "176                 0.2      0.2         1.0   5.0      0.16         inf  \n",
              "40                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "41                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "86                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "87                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "90                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "91                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "92                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "93                  0.2      0.2         1.0   5.0      0.16         inf  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9fc24f9e-eb61-40cd-bd61-01379ff8c0ab\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>(Sixth Sense, V4_Green Mile, V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>(V4_Green Mile, V1_Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>(V4_Green Mile)</td>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>(V4_Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>(Sixth Sense, V1_Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>(Sixth Sense, Green Mile)</td>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>(Sixth Sense, Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>(Sixth Sense, V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>(Sixth Sense, V4_Green Mile)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>(Sixth Sense, Green Mile)</td>\n",
              "      <td>(V4_Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fc24f9e-eb61-40cd-bd61-01379ff8c0ab')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9fc24f9e-eb61-40cd-bd61-01379ff8c0ab button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9fc24f9e-eb61-40cd-bd61-01379ff8c0ab');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules[rules.lift>1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "9q1Xl1XSnT4o",
        "outputId": "d1d3ac82-0e0c-479b-9812-2399d62fb989"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        antecedents                                        consequents  \\\n",
              "0     (Sixth Sense)                                        (Gladiator)   \n",
              "1       (Gladiator)                                      (Sixth Sense)   \n",
              "2     (Sixth Sense)                                          (Patriot)   \n",
              "3         (Patriot)                                      (Sixth Sense)   \n",
              "4     (Sixth Sense)                                       (Green Mile)   \n",
              "..              ...                                                ...   \n",
              "649  (V1_Gladiator)  (V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...   \n",
              "650    (V2_Patriot)  (V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...   \n",
              "651     (Gladiator)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...   \n",
              "652   (Sixth Sense)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "653       (Patriot)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "\n",
              "     antecedent support  consequent support  support  confidence      lift  \\\n",
              "0                   0.6                 0.7      0.5    0.833333  1.190476   \n",
              "1                   0.7                 0.6      0.5    0.714286  1.190476   \n",
              "2                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "3                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "4                   0.6                 0.2      0.2    0.333333  1.666667   \n",
              "..                  ...                 ...      ...         ...       ...   \n",
              "649                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "650                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "651                 0.7                 0.4      0.4    0.571429  1.428571   \n",
              "652                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "653                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "\n",
              "     leverage  conviction  \n",
              "0        0.08         1.8  \n",
              "1        0.08         1.4  \n",
              "2        0.04         1.2  \n",
              "3        0.04         1.2  \n",
              "4        0.08         1.2  \n",
              "..        ...         ...  \n",
              "649      0.16         1.8  \n",
              "650      0.16         1.8  \n",
              "651      0.12         1.4  \n",
              "652      0.16         1.8  \n",
              "653      0.16         1.8  \n",
              "\n",
              "[654 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bbcfb8d1-7b8c-4df3-acf7-d658aa921f0a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.833333</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>649</th>\n",
              "      <td>(V1_Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>650</th>\n",
              "      <td>(V2_Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>651</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>1.428571</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>652</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>653</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>654 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbcfb8d1-7b8c-4df3-acf7-d658aa921f0a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bbcfb8d1-7b8c-4df3-acf7-d658aa921f0a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bbcfb8d1-7b8c-4df3-acf7-d658aa921f0a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.scatter(rules['support'],rules['confidence'])\n",
        "plt.xlabel('support')\n",
        "plt.ylabel('confidence') \n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "8BLyFRqenV9E",
        "outputId": "faf07c57-955f-4ac4-b4ec-405488c53e74"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#ASSOCIATION RULES WITH 15% SUPPORT AND 90% CONFIDENCE"
      ],
      "metadata": {
        "id": "TTt4gu4EnYTj"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "frequent_itemsets1 = apriori(df, min_support=0.15, use_colnames=True)\n",
        "frequent_itemsets1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "JEt3aA14ndoB",
        "outputId": "bc4b2b0a-c942-4fe5-97cf-8141fdde04b6"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    support                                           itemsets\n",
              "0       0.6                                      (Sixth Sense)\n",
              "1       0.7                                        (Gladiator)\n",
              "2       0.2                                            (LOTR1)\n",
              "3       0.2                                    (Harry Potter1)\n",
              "4       0.6                                          (Patriot)\n",
              "..      ...                                                ...\n",
              "76      0.4  (V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...\n",
              "77      0.4  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...\n",
              "78      0.4  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...\n",
              "79      0.4  (V3_Sixth Sense, V1_Gladiator, Gladiator, V2_P...\n",
              "80      0.4  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...\n",
              "\n",
              "[81 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-38136b92-b72b-4e73-9099-e9af1b3515e3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>support</th>\n",
              "      <th>itemsets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.6</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.7</td>\n",
              "      <td>(Gladiator)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.2</td>\n",
              "      <td>(LOTR1)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.2</td>\n",
              "      <td>(Harry Potter1)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.6</td>\n",
              "      <td>(Patriot)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>79</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, Gladiator, V2_P...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>0.4</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>81 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38136b92-b72b-4e73-9099-e9af1b3515e3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-38136b92-b72b-4e73-9099-e9af1b3515e3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-38136b92-b72b-4e73-9099-e9af1b3515e3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules1=association_rules(frequent_itemsets1,metric='lift',min_threshold=0.9)\n",
        "rules1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "RpJb8QkungI4",
        "outputId": "f8d0fdda-9638-4a3b-b32e-abb36c21ff8c"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        antecedents                                        consequents  \\\n",
              "0     (Sixth Sense)                                        (Gladiator)   \n",
              "1       (Gladiator)                                      (Sixth Sense)   \n",
              "2     (Sixth Sense)                                          (Patriot)   \n",
              "3         (Patriot)                                      (Sixth Sense)   \n",
              "4     (Sixth Sense)                                       (Green Mile)   \n",
              "..              ...                                                ...   \n",
              "649  (V1_Gladiator)  (V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...   \n",
              "650    (V2_Patriot)  (V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...   \n",
              "651     (Gladiator)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...   \n",
              "652   (Sixth Sense)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "653       (Patriot)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "\n",
              "     antecedent support  consequent support  support  confidence      lift  \\\n",
              "0                   0.6                 0.7      0.5    0.833333  1.190476   \n",
              "1                   0.7                 0.6      0.5    0.714286  1.190476   \n",
              "2                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "3                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "4                   0.6                 0.2      0.2    0.333333  1.666667   \n",
              "..                  ...                 ...      ...         ...       ...   \n",
              "649                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "650                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "651                 0.7                 0.4      0.4    0.571429  1.428571   \n",
              "652                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "653                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "\n",
              "     leverage  conviction  \n",
              "0        0.08         1.8  \n",
              "1        0.08         1.4  \n",
              "2        0.04         1.2  \n",
              "3        0.04         1.2  \n",
              "4        0.08         1.2  \n",
              "..        ...         ...  \n",
              "649      0.16         1.8  \n",
              "650      0.16         1.8  \n",
              "651      0.12         1.4  \n",
              "652      0.16         1.8  \n",
              "653      0.16         1.8  \n",
              "\n",
              "[654 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d21b422-e49d-4dfc-9a12-d037b41282b8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.833333</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>649</th>\n",
              "      <td>(V1_Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>650</th>\n",
              "      <td>(V2_Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>651</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>1.428571</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>652</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>653</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>654 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d21b422-e49d-4dfc-9a12-d037b41282b8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9d21b422-e49d-4dfc-9a12-d037b41282b8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9d21b422-e49d-4dfc-9a12-d037b41282b8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules1.sort_values('lift',ascending = False).head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "2pMMsCIcniP1",
        "outputId": "2ea1664c-8efd-4c12-9277-564226319647"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         antecedents  \\\n",
              "327                     (Green Mile)   \n",
              "176  (V4_Green Mile, V1_Sixth Sense)   \n",
              "40                   (V4_Green Mile)   \n",
              "41                  (V1_Sixth Sense)   \n",
              "86     (Sixth Sense, V1_Sixth Sense)   \n",
              "87         (Sixth Sense, Green Mile)   \n",
              "90                  (V1_Sixth Sense)   \n",
              "91                      (Green Mile)   \n",
              "92      (Sixth Sense, V4_Green Mile)   \n",
              "93         (Sixth Sense, Green Mile)   \n",
              "\n",
              "                                      consequents  antecedent support  \\\n",
              "327  (Sixth Sense, V4_Green Mile, V1_Sixth Sense)                 0.2   \n",
              "176                                  (Green Mile)                 0.2   \n",
              "40                               (V1_Sixth Sense)                 0.2   \n",
              "41                                (V4_Green Mile)                 0.2   \n",
              "86                                   (Green Mile)                 0.2   \n",
              "87                               (V1_Sixth Sense)                 0.2   \n",
              "90                      (Sixth Sense, Green Mile)                 0.2   \n",
              "91                  (Sixth Sense, V1_Sixth Sense)                 0.2   \n",
              "92                                   (Green Mile)                 0.2   \n",
              "93                                (V4_Green Mile)                 0.2   \n",
              "\n",
              "     consequent support  support  confidence  lift  leverage  conviction  \n",
              "327                 0.2      0.2         1.0   5.0      0.16         inf  \n",
              "176                 0.2      0.2         1.0   5.0      0.16         inf  \n",
              "40                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "41                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "86                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "87                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "90                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "91                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "92                  0.2      0.2         1.0   5.0      0.16         inf  \n",
              "93                  0.2      0.2         1.0   5.0      0.16         inf  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d4b31ac0-e748-4b7a-8284-11633f6d48be\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>(Sixth Sense, V4_Green Mile, V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>(V4_Green Mile, V1_Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>(V4_Green Mile)</td>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>(V4_Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>(Sixth Sense, V1_Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>(Sixth Sense, Green Mile)</td>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>(V1_Sixth Sense)</td>\n",
              "      <td>(Sixth Sense, Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>(Sixth Sense, V1_Sixth Sense)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>(Sixth Sense, V4_Green Mile)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>(Sixth Sense, Green Mile)</td>\n",
              "      <td>(V4_Green Mile)</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.16</td>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4b31ac0-e748-4b7a-8284-11633f6d48be')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d4b31ac0-e748-4b7a-8284-11633f6d48be button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d4b31ac0-e748-4b7a-8284-11633f6d48be');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules1[rules1.lift>1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "3WL7e37Lnkqx",
        "outputId": "0fb5a76b-7c7d-46c4-a020-6f91b2a3e28d"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        antecedents                                        consequents  \\\n",
              "0     (Sixth Sense)                                        (Gladiator)   \n",
              "1       (Gladiator)                                      (Sixth Sense)   \n",
              "2     (Sixth Sense)                                          (Patriot)   \n",
              "3         (Patriot)                                      (Sixth Sense)   \n",
              "4     (Sixth Sense)                                       (Green Mile)   \n",
              "..              ...                                                ...   \n",
              "649  (V1_Gladiator)  (V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...   \n",
              "650    (V2_Patriot)  (V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...   \n",
              "651     (Gladiator)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...   \n",
              "652   (Sixth Sense)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "653       (Patriot)  (V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...   \n",
              "\n",
              "     antecedent support  consequent support  support  confidence      lift  \\\n",
              "0                   0.6                 0.7      0.5    0.833333  1.190476   \n",
              "1                   0.7                 0.6      0.5    0.714286  1.190476   \n",
              "2                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "3                   0.6                 0.6      0.4    0.666667  1.111111   \n",
              "4                   0.6                 0.2      0.2    0.333333  1.666667   \n",
              "..                  ...                 ...      ...         ...       ...   \n",
              "649                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "650                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "651                 0.7                 0.4      0.4    0.571429  1.428571   \n",
              "652                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "653                 0.6                 0.4      0.4    0.666667  1.666667   \n",
              "\n",
              "     leverage  conviction  \n",
              "0        0.08         1.8  \n",
              "1        0.08         1.4  \n",
              "2        0.04         1.2  \n",
              "3        0.04         1.2  \n",
              "4        0.08         1.2  \n",
              "..        ...         ...  \n",
              "649      0.16         1.8  \n",
              "650      0.16         1.8  \n",
              "651      0.12         1.4  \n",
              "652      0.16         1.8  \n",
              "653      0.16         1.8  \n",
              "\n",
              "[654 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f278e940-042f-4271-bd37-4ec00f6b97a3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.833333</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.5</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>1.190476</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.111111</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(Green Mile)</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>649</th>\n",
              "      <td>(V1_Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V2_Patriot, Gladiator, Sixth ...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>650</th>\n",
              "      <td>(V2_Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, Gladiator, Sixt...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>651</th>\n",
              "      <td>(Gladiator)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Six...</td>\n",
              "      <td>0.7</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>1.428571</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>652</th>\n",
              "      <td>(Sixth Sense)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>653</th>\n",
              "      <td>(Patriot)</td>\n",
              "      <td>(V3_Sixth Sense, V1_Gladiator, V2_Patriot, Gla...</td>\n",
              "      <td>0.6</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.666667</td>\n",
              "      <td>1.666667</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>654 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f278e940-042f-4271-bd37-4ec00f6b97a3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f278e940-042f-4271-bd37-4ec00f6b97a3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f278e940-042f-4271-bd37-4ec00f6b97a3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(rules1['support'],rules1['confidence'])\n",
        "plt.xlabel('support')\n",
        "plt.ylabel('confidence') \n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "7H2r9w7knmzL",
        "outputId": "926a1424-66a2-4f92-f5d3-d4a379703cd6"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYIAAAEGCAYAAABo25JHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAXJklEQVR4nO3dfZBldX3n8ffHQcJoQNAZd2UGGdYMsBPDLtpBK25WTCSMqEBkVwfLiqiRfZBksxoqsFiJhUtFg3E3VU7FxYT4kFV8CCFjwTpRA1rJik4jIAKOjiMuM7g6KmhchocZv/vHPS3Xntvdt2f63Nvd5/2qutX3/M7v3PudM33vp8/5nYdUFZKk7nrcuAuQJI2XQSBJHWcQSFLHGQSS1HEGgSR13GHjLmC+Vq1aVevWrRt3GZK0pNxyyy3frarVg+YtuSBYt24dk5OT4y5DkpaUJN+caZ67hiSp4wwCSeo4g0CSOs4gkKSOMwgkqeNaO2ooydXAS4DvVNUzB8wP8CfAWcCDwAVV9cU2all3yfUHtN3zthe38VbqIH+/1La2f8fa3CJ4L7BxlvkvAtY3jwuBP22jiEErcLZ2aT78/VLbRvE71loQVNVnge/P0uUc4P3VczNwdJKntVWPJGmwcY4RrAHu7Zve1bQdIMmFSSaTTO7Zs2ckxUlSVyyJweKquqqqJqpqYvXqgWdIS5IO0jiDYDdwXN/02qZNkjRC4wyCLcBvpOe5wA+q6lsL/SYzjax7VIcWgr9fatsofsfS1j2Lk3wIOB1YBXwb+APg8QBV9e7m8NF30Tuy6EHgNVU159XkJiYmyovOSdL8JLmlqiYGzWvtPIKqOn+O+QW8oa33lyQNZ0kMFkuS2mMQSFLHGQSS1HEGgSR1nEEgSR1nEEhSxxkEktRxBoEkdZxBIEkdZxBIUscZBJLUcQaBJHWcQSBJHWcQSFLHGQSS1HEGgSR1nEEgSR1nEEhSxxkEktRxBoEkdZxBIEkd12oQJNmYZHuSHUkuGTD/+CSfTvKlJDclWdtmPZKkA7UWBElWAJuBFwEbgPOTbJjW7R3A+6vqFOBy4A/bqkeSNFibWwSnATuqamdVPQJcA5wzrc8G4O+a5zcOmC9JalmbQbAGuLdvelfT1u924GXN818HjkzylOkvlOTCJJNJJvfs2dNKsZLUVeMeLP5d4PlJbgWeD+wG9k/vVFVXVdVEVU2sXr161DVK0rJ2WIuvvRs4rm96bdP2E1V1H80WQZKfBc6rqgdarEmSNE2bWwTbgPVJTkhyOLAJ2NLfIcmqJFM1XApc3WI9kqQBWguCqtoHXARsBe4GPlJVdya5PMnZTbfTge1Jvgr8E+CKtuqRJA2Wqhp3DfMyMTFRk5OT4y5DkpaUJLdU1cSgeeMeLJYkjZlBIEkdZxBIUscZBJLUcW2eRyBJWgAnX3YDD+1/7MCeI1aEr1xx1oK9vlsEkrSITQ8BgIf2FydfdsOCvYdBIEmL2PQQmKv9YBgEktRxBoEkdZxBIEmL2BErMq/2g2EQSNIi9pUrzjrgS3+hjxry8FFJI3fdrbu5cut27ntgL8cevZKLzzyJc0+dft8qTVnIL/1BDAJJI3Xdrbu59No72Pto7x5Uux/Yy6XX3gFgGIyJu4YkjdSVW7f/JASm7H10P1du3T6mimQQSBqp+x7YO692tc8gkDRSxx69cl7tap9BIGmkLj7zJFY+fsVPta18/AouPvOkMVUkB4sljdTUgLBHDS0eBoGkkTv31DV+8S8i7hqSpI5rNQiSbEyyPcmOJJcMmP/0JDcmuTXJl5K0e9aEJOkAre0aSrIC2AycAewCtiXZUlV39XV7M/CRqvrTJBuAG4B1bdUktWHdJdcf0HbP2148hkqkg9PmFsFpwI6q2llVjwDXAOdM61PAUc3zJwH3tViPtOAGhcBs7dJi1OZg8Rrg3r7pXcBzpvV5C/C3SX4LeCLwwhbrkSQNMO7B4vOB91bVWuAs4ANJDqgpyYVJJpNM7tmzZ+RFStJy1mYQ7AaO65te27T1ex3wEYCq+hxwBLBq+gtV1VVVNVFVE6tXr26pXEnqpjaDYBuwPskJSQ4HNgFbpvX5P8CvAiT55/SCwD/5JWmEWguCqtoHXARsBe6md3TQnUkuT3J20+1NwOuT3A58CLigqhbujsxSy2Y6OsijhrSUZKl9705MTNTk5OS4y5CkJSXJLVU1MWjeuAeLJUljZhBIUscZBJLUcQaBJHWcQSBJHWcQSFLHGQSS1HEGgSR1nEEgSR03dBAkOT7JC5vnK5Mc2V5ZkqRRGSoIkrwe+BjwP5qmtcB1bRUlSRqdYbcI3gA8D/ghQFV9DXhqW0VJkkZn2CB4uLndJABJDqN3m0lJ0hI3bBB8Jsl/AVYmOQP4KPDx9sqSJI3KsEFwCb0bxtwB/DvgBuDNbRUlSRqdYW9evxK4uqreA5BkRdP2YFuFSZJGY9gtgk/T++KfshL41MKXI0katWG3CI6oqh9NTVTVj5I8oaWaJC1z1926myu3bue+B/Zy7NErufjMkzj31DXjLquzht0i+H9JnjU1keTZwN52SpK0nF13624uvfYOdj+wlwJ2P7CXS6+9g+tu3T3u0jpr2C2C3wE+muQ+IMA/BV7RWlWSlq0rt25n76P7f6pt76P7uXLrdrcKxmSoIKiqbUlOBk5qmrZX1aPtlSVpubrvgcE7E2ZqV/vmc9G5XwROAZ4FnJ/kN+ZaIMnGJNuT7EhyyYD5/y3Jbc3jq0kemEc9kpagY49eOa92tW+oLYIkHwCeAdwGTG3TFfD+WZZZAWwGzgB2AduSbKmqu6b6VNV/7uv/W8Cp8/0HSFpaLj7zJC699o6f2j208vEruPjMk2ZZSm0adoxgAthQVfO5rMRpwI6q2gmQ5BrgHOCuGfqfD/zBPF5f0hI0NQ7gUUOLx7BB8GV6A8TfmsdrrwHu7ZveBTxnUMckxwMnAH83w/wLgQsBnv70p8+jBEmL0bmnrvGLfxEZNghWAXcl+QLw8FRjVZ29QHVsAj5WVfsHzayqq4CrACYmJrzYnSQtoGGD4C0H8dq7geP6ptc2bYNsonepa0nSiA17+Ohnmt0366vqU81ZxSvmWGwbsD7JCfQCYBPwyumdmsNSjwE+N6/KJUkL4mDvULaGOe5QVlX7gIuArcDdwEeq6s4klyfp36W0CbhmngPRkqQFMuyuoTfQOwro89C7Q1mSOe9QVlU30LtkdX/b70+bfsuQNUiSWuAdyiSp44bdIph+h7L/iHcokwBYd8n1B7Td87YXj6ES6eB4hzLpEAwKgdnapcVo2KOGfgy8p3lIkpaRWYMgyR3MMhZQVacseEWSpJGaa4vgJc3PqZO9PtD8fBUOFkvSsjBrEFTVNwGSnFFV/VcG/b0kX6Q3diBJWsKGHSxOkuf1TfzSPJaVlq2Zjg7yqCEtJcMePvo64OokT6J3q8r7gde2VpW0hPilr6Vu2KOGbgH+RRMEVNUPWq1KkjQycx019Kqq+sskb5zWDkBVvbPF2iRJIzDXFsETmp9Htl2IJGk85gqCZzQ/76qqj7ZdjCRp9OY68ues9PYDXTqKYiRJozfXFsEn6B0h9LNJftjXHqCq6qjWKpMkjcSsWwRVdXFVHQ1cX1VH9T2ONAQkaXkY6qSwqjqn7UIkSeMx7K0qX5bka0l+kOSHSf5x2q4iSdISNeyZxX8EvLSq7m6zGEnS6A17vaBvGwKStDwNu0UwmeTDwHXAw1ONVXVtK1VJkkZm2C2Co4AHgV8DXto8XjLrEkCSjUm2J9mRZOAlq5O8PMldSe5M8sFhC5ckLYxhLzr3mvm+cJIVwGbgDGAXsC3Jlqq6q6/Penonqz2vqu5P8tT5vo8k6dAMe9TQ2iR/neQ7zeOvkqydY7HTgB1VtbOqHgGuAaYfhvp6YHNV3Q9QVd+Z7z9AknRoht019BfAFuDY5vHxpm02a4B7+6Z3NW39TgROTPIPSW5OsnHQCyW5MMlkksk9e/YMWbIkaRjDBsHqqvqLqtrXPN4LrF6A9z8MWA+cDpwPvCfJ0dM7VdVVVTVRVROrVy/E20qSpgwbBN9L8qokK5rHq4DvzbHMbuC4vum1TVu/XcCWqnq0qr4BfJVeMEiSRmTYIHgt8HLg/wLfAv4NcMEcy2wD1ic5IcnhwCZ6u5f6XUdva4Akq+jtKto5ZE2SpAUw7HkElwOvnhrUTfJk4B3Mct/iqtqX5CJgK7ACuLqq7kxyOTBZVVuaeb+W5C5gP3BxVc21pSFJWkCpqrk7JbdW1alztY3CxMRETU5OjvptpRmtu+T6A9q8ob0WmyS3VNXEoHnD7hp6XJJj+l7wyQy/NSEtW4NCYLZ2aTEa9sv8j4HPJZm6XeW/Ba5opyRJ0igNe2bx+5NMAr/SNL2s/wxhSdLSNfTuneaL3y9/SVpmhh0jkCQtUwaBdAhmOjrIo4a0lHjkj3SI/NLXUucWgSR1nEEgSR1nEEhSxxkEktRxBoEkdZxBIEkdZxBIUscZBJLUcQaBJHWcQSBJHWcQSFLHGQSS1HEGgSR1XKtBkGRjku1JdiS5ZMD8C5LsSXJb8/jNNuuRJB2otctQJ1kBbAbOAHYB25JsGXCLyw9X1UVt1SFJml2bWwSnATuqamdVPQJcA5zT4vtJkg5Cm0GwBri3b3pX0zbdeUm+lORjSY4b9EJJLkwymWRyz549bdQqSZ017sHijwPrquoU4JPA+wZ1qqqrqmqiqiZWr1490gIlablrMwh2A/1/4a9t2n6iqr5XVQ83k38GPLvFeiRJA7QZBNuA9UlOSHI4sAnY0t8hydP6Js8G7m6xHknSAK0dNVRV+5JcBGwFVgBXV9WdSS4HJqtqC/DbSc4G9gHfBy5oqx5J0mCpqnHXMC8TExM1OTk57jIkaUlJcktVTQyaN+7BYknSmBkEktRxBoEkdZxBIEkdZxBIUscZBJLUcQaBJHWcQSBJHWcQSFLHGQSS1HEGgSR1nEEgSR1nEEhSxxkEktRxBoEkdZxBIEkdZxBIUscZBJLUcQaBJHWcQSBJHWcQSFLHtRoESTYm2Z5kR5JLZul3XpJKMtFmPZKkA7UWBElWAJuBFwEbgPOTbBjQ70jgPwGfb6sWSdLM2twiOA3YUVU7q+oR4BrgnAH93gq8HXioxVokSTNoMwjWAPf2Te9q2n4iybOA46rq+tleKMmFSSaTTO7Zs2fhK5WkDhvbYHGSxwHvBN40V9+quqqqJqpqYvXq1e0XJ0kd0mYQ7AaO65te27RNORJ4JnBTknuA5wJbHDCWpNFqMwi2AeuTnJDkcGATsGVqZlX9oKpWVdW6qloH3AycXVWTLdYkSZqmtSCoqn3ARcBW4G7gI1V1Z5LLk5zd1vtKkubnsDZfvKpuAG6Y1vb7M/Q9vc1aJEmDeWaxJHWcQSBJHWcQSFLHGQSS1HEGgSR1nEEgSR1nEEhSxxkEktRxBoEkdZxBIEkdZxBIUse1eq2hxeLky27gof31k+kjVoSvXHHWGCuSpMVj2W8RTA8BgIf2FydfdsMMS0hStyz7IJgeAnO1S1LXLPsgkCTNziCQpI5b9kFwxIrMq12SumbZB8FXrjjrgC99jxqSpMd04vBRv/QlaWbLfotAkjQ7g0CSOq7VIEiyMcn2JDuSXDJg/r9PckeS25L8fZINbdYjSTpQa0GQZAWwGXgRsAE4f8AX/Qer6heq6l8CfwS8s616JEmDtblFcBqwo6p2VtUjwDXAOf0dquqHfZNPBDzdV5JGrM2jhtYA9/ZN7wKeM71TkjcAbwQOB35l0AsluRC4sJn8UZLtB1nTKuC7B7lsm6xrfqxr/hZrbdY1P4dS1/EzzRj74aNVtRnYnOSVwJuBVw/ocxVw1aG+V5LJqpo41NdZaNY1P9Y1f4u1Nuuan7bqanPX0G7guL7ptU3bTK4Bzm2xHknSAG0GwTZgfZITkhwObAK29HdIsr5v8sXA11qsR5I0QGu7hqpqX5KLgK3ACuDqqrozyeXAZFVtAS5K8kLgUeB+BuwWWmCHvHupJdY1P9Y1f4u1Nuuan1bqSpUH6khSl3lmsSR1nEEgSR23bIJgiMtZvDHJXUm+lOTTSY7vm/fqJF9rHgs6TnGIde1vLr9xW5It05dtua4ZL/+R5NJmue1JzlwMdSVZl2Rv3/p69yjr6ut3XpJKMtHXNrb1NVNd415fSS5Isqfv/X+zb944P4+z1TW2z2PT5+XNd8WdST7Y137o66uqlvyD3mD014F/Ru/EtNuBDdP6vAB4QvP8PwAfbp4/GdjZ/DymeX7MuOtqpn80xvV1VN/zs4FPNM83NP1/BjiheZ0Vi6CudcCXx7W+mn5HAp8FbgYmFsP6mqWusa4v4ALgXQOWHffncWBdzbxxfh7XA7dOrQvgqQu5vpbLFsEwl7O4saoebCZvpndeA8CZwCer6vtVdT/wSWDjIqirTYdy+Y9zgGuq6uGq+gawo3m9cdfVpjnrarwVeDvwUF/bWNfXLHW1adi6Bhnr53FMhqnr9cDmZp1QVd9p2hdkfS2XIBh0OYs1s/R/HfC/DnLZUdUFcESSySQ3J1nIk+2GqivJG5J8nd4FAX97PsuOoS6AE5LcmuQzSX55gWoaqq4kzwKOq6rr57vsmOqCMa6vxnnNLtGPJZk6+XTsv18z1AXj/TyeCJyY5B+a9984j2XntFyCYGhJXgVMAFeOu5Z+M9R1fPVOJ38l8N+TPGOUNVXV5qp6BvB79C7/sSjMUNe3gKdX1an0rl31wSRHjaKeJI+jd+XcN43i/YY1R11jW1+NjwPrquoUen/Fvm+E7z2b2eoa5+fxMHq7h04Hzgfek+TohXrx5RIEQ13OIr2T1y4Dzq6qh+ez7Bjqoqp2Nz93AjcBp46yrj79l/8Y+/oaVFez6+V7zfNb6O1zPXFEdR0JPBO4Kck9wHOBLc3A7DjX14x1jXl9UVXf6/td/zPg2cMuO6a6xv153AVsqapHm12MX6UXDAuzvtoY/Bj1g15a7qQ3GDc12PLz0/qcSu+Xff209icD36A30HJM8/zJi6CuY4CfaZ6vonf5jQMGAlusa33f85fSOxsc4Of56cHPnSzc4Oeh1LV6qg56g267R/n/OK3/TTw2KDvW9TVLXWNdX8DT+p7/OnBz83zcn8eZ6hr353Ej8L6+978XeMpCra9D/kcslgdwFr2U/DpwWdN2Ob2/sgE+BXwbuK15bOlb9rX0BvF2AK9ZDHUBvwTc0fxS3AG8bsR1/QlwZ1PTjf2/mPS2Xr4ObAdetBjqAs7ra/8i8NJR1jWt7000X7jjXl8z1TXu9QX8YfP+tzf/jyf3LTvOz+PAuhbB5zH0dvPd1bz/poVcX15iQpI6brmMEUiSDpJBIEkdZxBIUscZBJLUcQaBJHWcQSAtEkl+J8kTxl2HusfDR6VFIMnUFSgnquq7465H3eIWgTovyROTXJ/k9iRfTvKKJPckWdXMn0hyU/P8LUk+kORzzfXfX9+0n57ks83rbE/y7uZaPyQ5P717KHw5ydv73vdHSf44ye30Tjo7FrgxyY2jXgfqttZuXi8tIRuB+6rqxQBJnkTvss0zOYXedXueCNyaZOrKnqfRu//AN4FPAC9L8r+b13o2cD/wt0nOrarrmuU/X1Vvat73tcAL3CLQqLlFIPVO2T8jyduT/HJV/WCO/n9TVXubL+wbeez+Al+o3jXl9wMfAv4V8IvATVW1p6r2Af8T+NdN//3AXy34v0aaJ7cI1HlV9dXmuv1nAf81yaeBfTz2h9IR0xeZYXqm9pk81ISGNFZuEajzkhwLPFhVf0nvfhDPAu7hsUsQnzdtkXOSHJHkKfSuD7+taT8tyQnN2MArgL8HvgA8P8mqZkD4fOAzM5Tyj/QuHS2NlFsEEvwCcGWSHwOP0rt39Ergz5O8ld5VO/t9id4uoVXAW6vqviQn0guEdwE/18z/66r6cXMz8hvpXUHy+qr6mxnquAr4RJL7quoFC/ovlGbh4aPSPCR5C72bmL9jWvvpwO9W1UvGUZd0KNw1JEkd5xaBJHWcWwSS1HEGgSR1nEEgSR1nEEhSxxkEktRx/x+hXAVShAMmzAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "Fh83QpFzno-Q"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}